{"version":3,"sources":["components/TableBody.js","components/Search.js","components/Table.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["TableBody","users","undefined","name","map","user","style","paddingTop","paddingBottom","src","picture","large","width","height","fontSize","first","last","phone","email","dob","date","Search","props","handleSearch","searchWord","placeholder","type","onChange","event","marginLeft","Table","state","filter","a","target","value","console","log","filteredList","item","Object","values","join","toLowerCase","indexOf","setState","axios","get","then","results","data","this","className","backgroundColor","length","React","Component","Header","color","padding","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebc249bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./css/TableBody.css\"\r\n\r\nexport default function TableBody({ users }) {\r\n\r\n    return (\r\n        <div>\r\n            {users[0] !== undefined && users[0].name !== undefined ?\r\n                users.map(user => {\r\n                    return( \r\n                        <tr>\r\n                            <td style={{paddingTop: \"10px\", paddingBottom: \"10px\" }}>\r\n                                <img src={user.picture.large} style={{ width: \"80%\" , height: \"80%\"}}/>\r\n                            </td>\r\n                            <td style={{paddingTop: \"10px\", paddingBottom: \"10px\", fontSize: \"1.3em\"}}>\r\n                                {user.name.first} {user.name.last}\r\n                            </td>\r\n                            <td style={{paddingTop: \"10px\", paddingBottom: \"10px\" , fontSize: \"1.3em\"}}>\r\n                                {user.phone}\r\n                            </td>\r\n                            <td style={{paddingTop: \"10px\", paddingBottom: \"10px\", fontSize: \"1.3em\"}}>\r\n                                {user.email}\r\n                            </td>\r\n                            <td style={{paddingTop: \"10px\", paddingBottom: \"10px\" , fontSize: \"1.3em\"}}>\r\n                                {user.dob.date}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }) : (<></>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport \"./css/SearchStyles.css\"\r\n\r\nexport default function Search(props) {\r\n\r\n    const {handleSearch,\r\n           searchWord} = props;\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                placeholder=\"search\"\r\n                type=\"search\"\r\n                onChange = {(event) => handleSearch(event)}\r\n                style = {{marginLeft: \"700px\", height: \"35px\"}}\r\n                // value = {searchWord}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TableBody from \"./TableBody\";\r\nimport Search from \"./Search\"\r\n\r\nimport './css/TableStyles.css'\r\n\r\nexport default class Table extends React.Component {\r\n\r\n    state = {\r\n        users: [{}],\r\n        filter: []\r\n    }\r\n\r\n   componentDidMount(){\r\n    axios.get(\"https://randomuser.me/api/?results=20&nat=us\").then( results => {\r\n        this.setState({ users: results.data.results })\r\n    })\r\n    \r\n   }\r\n\r\n   handleSearch = async (event) => {\r\n    const filter = event.target.value;\r\n    console.log(filter);\r\n    const filteredList = this.state.users.filter(item => {\r\n      let values = Object.values(item)\r\n        .join(\"\")\r\n        .toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n    await this.setState({ filter: filteredList });\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    handleSearch = {this.handleSearch}\r\n                />\r\n                <div >\r\n                    <p className=\"headerNames\" style = {{backgroundColor: '#fffbd5', paddingTop: \"30px\", paddingBottom:\"30px\" , fontSize: \"1.3em\"}}>Image</p>\r\n                    <p className=\"headerNames\" style = {{backgroundColor: '#fffbd5', paddingTop: \"30px\", paddingBottom:\"30px\", fontSize: \"1.3em\"}}>Name</p>\r\n                    <p className=\"headerNames\" style = {{backgroundColor: '#fffbd5', paddingTop: \"30px\", paddingBottom:\"30px\", fontSize: \"1.3em\"}}>Phone</p>\r\n                    <p className=\"headerNames\" style = {{backgroundColor: '#fffbd5', paddingTop: \"30px\", paddingBottom:\"30px\", fontSize: \"1.3em\"}}>Email</p>\r\n                    <p className=\"headerNames\"style = {{backgroundColor: '#fffbd5', paddingTop: \"30px\", paddingBottom:\"30px\", fontSize: \"1.3em\"}}>DOB</p>\r\n                </div>\r\n                {console.log(this.state.filter)}\r\n                <TableBody \r\n                    users = { this.state.filter.length == 0 ? this.state.users : this.state.filter}\r\n                    \r\n                />\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport \"./css/TableStyles.css\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div style={{backgroundColor: \"#181839\", color: \"white\",padding: \"30px\", textAlign: \"center\" }}>\r\n            <h1>Employee Directory</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport Table from './components/Table'\nimport Header from './components/Header'\nimport Search from './components/Search'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Table/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}